<project name="personalNameExtractor" basedir="." default="package">
<property name="project.title" value="Personal Name Extractorbbbbbbbbb"/>
<property name="artifactId" value="projectName"/>
<description>This is my project.</description>
<record name="ant.log" action="start" append="false"/>
<property name="project.title" value="My Project"/>
<path id="test.compilation.path">
<pathelement path="target/classes"/>
<!--
 will need to add JUnit and Hamcrest-core Jar locations 
-->
</path>
<path id="test.execution.path">
<pathelement path="target/test-classes"/>
<path refid="test.compilation.path"/>
</path>
<target name="compile" description="Compile all non-test source code.">
<mkdir dir="target/classes"/>
<javac srcdir="src/main/java" destdir="target/classes" source="1.7" optimize="on" debug="on" includeantruntime="false"></javac>
</target>
<target name="compile-tests" depends="compile" description="Compile JUnit tests">
<mkdir dir="target/test-classes"/>
<javac srcdir="src/test/java" destdir="target/test-classes" source="1.7" optimize="on" debug="on" includeantruntime="false">
<classpath refid="test.compilation.path"/>
</javac>
</target>
<target name="test" depends="compile-tests" description="Run all unit tests, producing a summary report in target/test-results.">
<mkdir dir="target/test-results"/>
<junit haltonfailure="no" fork="yes">
<classpath refid="test.execution.path"/>
<formatter type="plain" usefile="false"/>
<!--  output to screen  -->
<formatter type="plain"/>
<!--  output to files in target/test-results  -->
<batchtest todir="target/test-results">
<fileset dir="target/test-classes">
<include name="**/*Test*.class"/>
<exclude name="**/*$*.class"/>
</fileset>
</batchtest>
</junit>
</target>
<target name="package" depends="test" description="Construct a jar file with the compiled code and a zip file with the project source code.">
<jar destfile="target/${artifactId}.jar" basedir="target/classes">
<!--
 Uncomment if you have a main class to execute by default.
      <manifest>
        <attribute name="Main-Class"
                   value="edu.odu.cs.code2html.Code2HTML"/>
      </manifest>
      
-->
</jar>
<zip destfile="target/${artifactId}-src.zip">
<fileset dir=".">
<include name="*.xml"/>
<include name="src/**/*"/>
<exclude name="**/*~"/>
<exclude name="target/**/*"/>
</fileset>
</zip>
</target>
<target name="build" depends="package" description="Construct a jar and source files and assorted reports."></target>
<target name="clean">
<delete dir="target"/>
</target>
</project>