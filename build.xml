<project name="PNE" default="build" basedir=".">
	
	<description>Personal Name Extractor</description>
	
    <!--
    ================
    BUILD PROPERTIES
    ================
    -->
  	<property name="src.main" location="src/main/java/edu/odu/cs/cs350/namex"/>
  	<property name="src.test" location="src/test/java/edu/odu/cs/cs350/namex"/>
  	<property name="build" location="target/classes"/>
  	<property name="dist" location="target"/>
  	<property name="lib" location="lib"/>

	<import file="ivy.build.xml"/>
	
	<path id="classpath">
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<path id="test.compilation.path">
		<pathelement path="${src.main}"/>
	  	<pathelement path="${src.test}"/>
		<pathelement path="target/classes"/>
		<path refid="ivy.classpath"/>
	</path>
	
	<path id="main.compilation.path">
		<pathelement path="${src.main}"/>
		<pathelement path="target/classes"/>
		<path refid="ivy.classpath"/>
	</path>
	
	<path id="test.compilation.path">
		<pathelement path="target/classes"/>
		<fileset dir="${lib}" includes="**/*.jar"/>
	</path>	
		
	<path id="test.execution.path">
		<pathelement path="target/test-classes"/>
		<path refid="test.compilation.path"/>
	</path>	

    <!--
    ===========
    INIT TARGET
    ===========
    -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="target/classes"/>
		<mkdir dir="${lib}"/>
		
	</target>
	
    <!--
    ==============
    COMPILE TARGET
    ==============
    -->
	<target name="compile" depends="init" description="Compile all non-test source code.">
		<mkdir dir="target/classes"/>
		<javac srcdir="src/main/java" destdir="target/classes" source="1.7" optimize="on" debug="on" includeantruntime="false"></javac>
	</target>

    <!--
    ====================
    COMPILE-TESTS TARGET
    ====================
    -->
	<target name="compile-tests" depends="compile" description="Compile JUnit tests">
		<mkdir dir="target/test-classes"/>
		<javac srcdir="src/test/java" destdir="target/test-classes" source="1.7" optimize="on" debug="on" includeantruntime="false">
			<classpath refid="test.compilation.path"/>
		</javac>
	</target>
	
    <!--
    ===========
    TEST TARGET
    ===========
    -->
	<target name="test" depends="compile-tests" description="Run all unit tests, producing a summary report in target/test-results.">
		<mkdir dir="target/test-results"/>
		<junit haltonfailure="no" fork="yes">
			<classpath refid="test.execution.path"/>
			<formatter type="plain" usefile="false"/>
			<!--  output to screen  -->
			<formatter type="xml"/>
			<!--  output to files in target/test-results  -->
			<batchtest todir="target/test-results">
			<fileset dir="target/test-classes">
				<include name="**/*Test*.class"/>
				<exclude name="**/*$*.class"/>
			</fileset>
			</batchtest>
		</junit>
	</target>
	
    <!--
    ==============
    PACKAGE TARGET
    ==============
    -->
	<target name="package" depends="test" description="Construct a jar file with the compiled code and a zip file with the project source code.">
		<jar destfile="target/PNE.jar" basedir="target/classes">
		<!--
		 Uncomment if you have a main class to execute by default.
		-->
		      <manifest>
		        <attribute name="Main-Class"
		                   value="edu.odu.cs.cs350.namex.Librarian"/>
		      </manifest>    
		</jar>
	</target>
	
    <!--
    =================
    GENERATE JAVADOCS
    =================
    -->
    <!-- Generate javadocs for current project into ${doc.dir} -->
    <target name = "generate-javadoc" depends="package" description="generate documentation">
    	
		<javadoc packagenames="personalNameExtractor" sourcepath="${src.main}" 
			destdir = "${dist}/doc" version = "true" 
			windowtitle = "Personal Name Extractor">
       	
        <fileset dir = "${src.main}">
			<include name = "**/*.java"/>
		</fileset>  
			
		<doctitle><![CDATA[= Personal Name Extractor =]]></doctitle>
      
       </javadoc>
    </target>
	
    <!--
    ============
    BUILD TARGET
    ============
    -->
	<target name="build" depends="generate-javadoc" description="Construct a jar and source files and assorted reports.">
		<!--
		<ivy:cachefileset conf="build" setid="runtime.fileset" />
		<jar destfile="target/MyJavaApplication.jar" basedir="target/classes">                           
			<zipgroupfileset refid="runtime.fileset"/>             
			<manifest>
				<attribute name="Main-Class" value="edu.odu.cs.cs350.MainClassName"/> 
			</manifest>
		</jar> -->
		
	</target>
	
    <!--
    ============
    CLEAN TARGET
    ============
    -->
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>  
		<delete dir="${lib}"/>  
	</target>
	
</project>
		
		
		