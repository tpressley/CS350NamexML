<project name="PersonalNameExtractor" default="dist" basedir=".">

	
	<description>
    Build file for the PersonalNameExtractor project in CS350
  </description>
  <!-- set global properties for this build -->
  <property name="src.main" location="src/main/java/edu/odu/cs/cs350/namex"/>
  <property name="src.test" location="src/test/java/edu/odu/cs/cs350/namex"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  <property name="lib" location="lib"/>
	
  	<import file="ivy.build.xml"/>
	
  <path id="classpath">
  	<fileset dir="lib">
    <include name="**/*.jar"/>
    </fileset>
  </path>
	<path id="test.compilation.path">
	  	<pathelement path="${src.main}"/>
	  	<pathelement path="${src.test}"/>
	   <pathelement path="target/classes"/>
	   <path refid="ivy.classpath"/>
	</path>
	<path id="main.compilation.path">
		  	<pathelement path="${src.main}"/>
		   <pathelement path="target/classes"/>
		   <path refid="ivy.classpath"/>
		</path>

	
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  	<mkdir dir="${lib}"/>
  	<get src="http://archive350.cs.odu.edu:8080/artifactory/jcenter-cache/junit/junit/4.11/junit-4.11.jar" dest="${lib}/junit.jar"/>
  	<get src="http://archive350.cs.odu.edu:8080/artifactory/jcenter-cache/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" dest="${lib}/hamcrest.jar"/>
  	<get src="http://archive350.cs.odu.edu:8080/artifactory/jcenter-cache/nz/ac/waikato/cms/weka/weka-stable/3.6.13/weka-stable-3.6.13.jar" dest="${lib}/weka.jar"/>
  </target>
	

  <target name="compile" depends="resolve-ivy"
        description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src.main}" destdir="${build}" verbose ="true">
    		<classpath path="${lib}">
    	  		  		<path refid="main.compilation.path" />
    	  				<fileset dir="${lib}">
    	  			<include name="**/*.jar" />
    			</fileset>
    	  	</classpath>
    	</javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the PersonalNameExtractor-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/PersonalNameExtractor-${DSTAMP}.jar" basedir="${build}"/>
  </target>
	
  <target name="test" depends="compile"
  		description="run the junit tests">
  	<junit fork="yes">
  		<classpath path="${lib}">
  		           	<path refid="test.compilation.path" />
  					<fileset dir="${lib}">
  			            <include name="**/junit.jar" />
  			        </fileset>
  		</classpath>
  		<formatter type = "plain" usefile = "false"/>
  		<formatter type = "plain" />
  		<test name = "UnitTesting" todir = "."/>
  	  </junit>
  </target>
  <target name="clean"
        description="clean up">

    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>  </target>
</project>